#version 330 core

#define PI 3.14159265359

uniform sampler2D aTexture;
uniform float u_time;
uniform vec2 u_resolution;

uniform bool textured;
uniform vec4 color;

out vec4 FragColor;
in vec2 TexCoord;

vec3 acolor = vec3(0.7, 0.0, 0.5);
vec3 bcolor = vec3(0.0, 1.0, 1.0);

vec3 r = vec3(1.0, 0.0, 0.0);
vec3 g = vec3(0.0, 1.0, 0.0);
vec3 b = vec3(0.0, 0.0, 1.0);

float plot(vec2 st, float pct) {
    return smoothstep(pct - 0.01, pct, st.y) -
           smoothstep(pct, pct + 0.01, st.y);
}

float square(vec2 st, vec2 pos, vec2 size) {
    vec2 a = step(vec2(pos.x, 1.0 - (pos.y + size.y)), st);
    vec2 b = step(vec2(1.0 - (pos.x + size.x), pos.y), 1.0 - st);
    return a.x * a.y * b.x * b.y;
}

float outline(vec2 st, vec2 pos, vec2 size) {
    //vec2 a = step(vec2(pos.x, 1.0 - (pos.y + size.y)), st) * (1.0 - step(vec2(pos.x + 0.05,  0.9), st));
    //vec2 b = step(vec2(1.0 - (pos.x + size.x), pos.y), 1.0 - st);
    //return a.x * a.y; //* b.x * b.y;
    return 0;
}

void main()
{
    vec3 color = vec3(1.0);
    vec2 st = gl_FragCoord.xy / u_resolution;

    // scene
    float d = length(abs(st * 2 - 1) - 0.04);

    // color
    color *= fract(d * abs(cos(u_time * 0.1) * 30) + 0.5);
    FragColor = vec4(color, 1.0);
}